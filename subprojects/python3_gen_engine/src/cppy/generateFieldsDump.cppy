<#
    *includable module*
    requires:name, hasMultiFields, applies,fields, ori_fields
    所有的base都是相对于0的。
    不推荐++,--, +N,-N嵌套，相反，它们应当成对使用。
>
<```
if has_dump and len(fields)>=1:
>
<=  ++>
AS_MACRO void dump()const volatile
{{
    kout << "{name}: ";
<= -->
<```
    applyIndex=-1
    for struct_name,field in fields:
        applyIndex+=1
        if hasMultiFields:
            if applies[applyIndex]:
                ifCond = "if("+applies[applyIndex]+")"
            else:
                ifCond = "else"
>
<=          +3>
    {ifCond}
    {{
<=          -3>
<=      +2>
        kout
<=      -2>
<```
        for i in range(0,len(field),2):
            fd=field[i]
            if hasMultiFields:
                fd=struct_name+"."+fd
            features=ori_fields[applyIndex][1][i].split(",")
            if len(features)>1:
                features=features[1:]
                if len(features)>1:
                    raise Exception("Currently Unsupported Feature Number more than 1\n")
                transferedFd = features[0].strip()+"("+fd+")"
            else:
                transferedFd = fd    
>
<=           +3>
            << "{fd} = " << {transferedFd} << ", "
<=           -3>
<=      +2>
            << "\\n";
<=      -2>
<```
        if hasMultiFields:
>
<=          +3>
    }}
<=          -3>
<= ++>
}}
AS_MACRO void dump()const
{{
	reinterpret_cast<volatile const {name}*>(this)->dump();
}}
<= -->