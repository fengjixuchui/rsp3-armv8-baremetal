digraph "FAT32EntryTable"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node3 [label="{FAT32EntryTable\n||+ FAT32EntryTable()\l+ FAT32EntryTable()\l+ FAT32EntryTable()\l+ findByLongName()\l+ findByShortName()\l+ foreachEntry()\l+ getEntryCount()\l+ getSize()\l+ locateFileOffset()\l+ next()\l+ operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node4 -> Node3 [dir="back",color="firebrick4",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{Vector\< FAT32Entry \>\n|- capacity\l- size\l|+ append()\l+ clear()\l+ empty()\l+ erase()\l+ getCapacity()\l+ getData()\l+ getData()\l+ getSize()\l+ insert()\l+ operator=()\l和 12 更多...\l- adjustCapacityForOneLess()\l- adjustCapacityForOneMore()\l- resizeCapacity()\l- getIncrementalSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/db2/class_vector.html"];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -data" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{FAT32Entry\n|+ __attribute\l+ effBits\l+ reservedNotTouched\l|+ FAT32Entry()\l+ getAsInt()\l+ isAlloced()\l+ isBad()\l+ isFree()\l+ isLast()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d32/class_f_a_t32_entry.html"];
  Node6 -> Node4 [dir="back",color="orange",fontsize="10",style="solid",label=" \< FAT32Entry \>" ,fontname="Helvetica"];
  Node6 [label="{Vector\< T \>\n|- capacity\l- size\l|+ append()\l+ clear()\l+ empty()\l+ erase()\l+ getCapacity()\l+ getData()\l+ getData()\l+ getSize()\l+ insert()\l+ operator=()\l和 12 更多...\l- adjustCapacityForOneLess()\l- adjustCapacityForOneMore()\l- resizeCapacity()\l- getIncrementalSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/db2/class_vector.html"];
  Node7 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -data" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{T\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node8 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -e32bpb" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{FAT32ExtBPB\n|+ __attribute__\l+ bkBootSe\l+ BS_BootSig\l+ BS_DrvNum\l+ BS_FilSysType\l+ BS_Reserved1\l+ BS_VolID\l+ BS_VolLab\l+ extFlags\l+ FATSz32\l和 6 更多...\l|+ calculateFATSz32()\l+ getClusterByteSize()\l+ getClusterEntryOffset()\l+ getClusterFirstSector()\l+ getFATType()\l+ getRootDirFirstSector()\l+ uni_determineFATType()\l+ uni_getClustersCount()\l+ uni_getDataRegionSectorCount()\l+ uni_getFatSize()\l+ uni_getTotalSecCount()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/dd1/class_f_a_t32_ext_b_p_b.html"];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{FAT_BPB\n|+ __attribute__\l+ BS_jmpBoot\l+ BS_OEMName\l+ bytesPerSec\l+ FATSz16\l+ hiddSec\l+ media\l+ numFATs\l+ numHeads\l+ rootEntCnt\l+ rsvdSecCnt\l+ secPerClus\l+ secPerTrk\l+ totSec16\l+ totSec32\l|+ getFATType()\l+ uni_getRootDirSecCount()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d6e/class_f_a_t___b_p_b.html"];
  Node10 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -breader" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{ByteReader\n|- buffer\l|+ adjustOneSecForReadOrWrite()\l+ ByteReader()\l+ ByteReader()\l+ getSectorSize()\l+ operator=()\l+ read()\l+ write()\l+ ~ByteReader()\l- ensureSectorBuffer()\l- readSectorToBuffer()\l- writeSectorFromBuffer()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d5d/class_byte_reader.html"];
  Node11 -> Node10 [color="grey25",fontsize="10",style="solid",label=" -sreader" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{SectorReader\n||+ read()\l+ write()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/de9/class_sector_reader.html"];
}
