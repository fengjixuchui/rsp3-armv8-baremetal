include ${ROOT_PROJECT}/makefiles/qemu_common/makefile.targets
include ${ROOT_PROJECT}/makefiles/aarch64_common/makefile.aarch64_ALL_REGISTERS.targets


qemu_loader:
	$(QEMU_AARCH64) $(QEMU_NO_BIOS) -machine virt,gic-version=3,virtualization=on,secure=on -device loader,file=$(MASTERY_BINARY),addr=0,data=0
qemu_virt.dts:FORCE
	$(QEMU_AARCH64) -machine virt,gic-version=3,dumpdtb=qeme_virt.dtb $(QEMU_NO_MACHINE)
	$(DTC) -I dtb -O dts -o $@ qemu_virt.dtb
qemu_virt_el3.dts:FORCE
	$(QEMU_AARCH64) $(QEMU_ARGS_EL3),dumpdtb=qeme_virt.dtb
	$(DTC) -I dtb -O dts -o $@ qemu_virt.dtb
# 通过dd将用户程序嵌入到内核镜像中
userSpaceBin := $(ROOT_PROJECT)/subprojects/user_space/Debug/user_space.bin
# 注意,MASTERY_RELOC必须在MASTERY_ELF之前
$(MASTERY_BINARY):$(MASTERY_RELOC) $(MASTERY_ELF)
	$(TOOLCHAIN_OBJCOPY) -O binary $(MASTERY_ELF) $@
	userSpaceStart=$$(($(CODE_SIZE) + $(INITRAM_SIZE)))
	count=$$(($(USER_SPACE_SIZE)))
	dd if=$(userSpaceBin) of=$@ seek=$$userSpaceStart bs=1c count=$$count


$(MASTERY_RELOC):$(MASTERY_ELF)
	# 改变IMAGE_BASE的值，然后编译生成即可
	mv $(MASTERY_ELF) $(MASTERY_ELF).temp
	$(MAKE) IMAGE_BASE=0xffffff0000000000 $(MASTERY_ELF)
	mv $(MASTERY_ELF) $@
	mv $(MASTERY_ELF).temp $(MASTERY_ELF)
dump_reloc:
	$(TOOLCHAIN_OBJDUMP -D $(MASTERY_RELOC)|less
.PHONY:dump-reloc

# CLEAN-ALL-LIST增加
CLEAN-ALL-LIST += $(MASTERY_RELOC) $(MASTERY_BINARY) $(MASTERY_ELF)